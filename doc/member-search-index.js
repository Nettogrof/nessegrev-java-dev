memberSearchIndex = [{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"AbstractDecisionNode()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"AbstractDecisionNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"AbstractEvaluationNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"AbstractHazard(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"AbstractLimitedMoveRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveSearch","l":"AbstractLimitedMoveSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"AbstractMultiThreadSnakeAI()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"AbstractMultiThreadSnakeAI(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"AbstractNode()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"AbstractNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"AbstractRoyaleNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"AbstractRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"AbstractSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"AbstractSnakeAI()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"AbstractSnakeAI(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadNode","l":"AbstractSquadNode(List<? extends SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch(AbstractNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"AbstractStandardNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"AbstractStandardSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"AbstractStandardSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"AbstractTreeSearchSnakeAI()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"AbstractTreeSearchSnakeAI(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"addChild(AbstractNode)","u":"addChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"allChildsCount"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"API_V1"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilterUtils","l":"apply()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"BASIC_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"BasicSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"BasicSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"borderScore"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"clone()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"cloneSnake()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorNode","l":"ConstrictorNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"ConstrictorSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"ConstrictorSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"ConstrictorSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"die()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"DuelNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"EMPTY_AREA"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"exp"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"ExpertSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"ExpertSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FloodFillSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FloodFillSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"FoodInfo(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"foodValueArea"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"FourNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"GameRuleset(int, int, int, int)","u":"%3Cinit%3E(int,int,int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"GameRuleset(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateChild()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getBestChild(AbstractNode)","u":"getBestChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getChild()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getChildCount()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getFood()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getFoodSpawnChance()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getGameType()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getHazard()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"getHazard()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getHazardDamage()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getHead()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getHealth()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"getListHazard()"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"getListHazard()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getMinimumFood()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getName()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getPosition()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadNode","l":"getScoreRatio()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getShortestDistance(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getShortestDistance(int, int)","u":"getShortestDistance(int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getSnakeBody()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getSnakes()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"getSquad()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getTail()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"Handler()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"hazardScore"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"HazardSquare(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"height"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"INVALID_SCORE"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isAlive()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isEat()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"isFood(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"isFood(int, int)","u":"isFood(int,int)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"isHazardSquare(int)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"isHazardSquare(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"isSingleSnake()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isSnake(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"isSnake(int, String)","u":"isSnake(int,java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"JustTurnRoyaleSearch","l":"JustTurnRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"JustTurnSearch","l":"JustTurnSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"LeftRoyaleSearch","l":"LeftRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"LeftStandardSearch","l":"LeftStandardSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"LOSE_SHOUT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"ManyNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"MAX_HEALTH"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"MAX_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"mctsBias"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"MINIMUN_SNAKE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"ONE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"ping()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"ping()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"possibleMove"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"process(Request, Response)","u":"process(spark.Request,spark.Response)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch(AbstractNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"RightRoyaleSearch","l":"RightRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"RightSnake","l":"RightSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"RightStandardSearch","l":"RightStandardSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"root()"},{"p":"ai.nettogrof.battlesnake.junit","c":"BasicSnakeTest","l":"royaleBasicTest()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"RoyaleDuelNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.junit","c":"ExpertSnakeTest","l":"royaleExpertTest()"},{"p":"ai.nettogrof.battlesnake.junit","c":"FloodFillSnakeTest","l":"royaleFloodFillTest()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"RoyaleFourNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.junit","c":"RightSnakeTest","l":"royaleRightTest()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"RoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"rules"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"score"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setBorderScore(float)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"setCpuLimit(int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"setFileConfig(String)","u":"setFileConfig(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setFoodValue(int)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setHazardScore(float)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"setHealth(int)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setMCTS(float)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"setMultiThread(boolean)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"setSnake(JsonNode)","u":"setSnake(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"setSquad(String)","u":"setSquad(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setStopExpandLimit(float)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setTailValue(int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"setTimeout(int)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"SINGLE_SNAKE"},{"p":"ai.nettogrof.battlesnake.junit","c":"ExpertSnakeTest","l":"singleRoyaleExpertTest()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"singleThreadTreeSearch(AbstractNode, Long, GameRuleset)","u":"singleThreadTreeSearch(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.lang.Long,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"SNAKE_BODY"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(SnakeInfo, int, boolean)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,int,boolean)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(SnakeInfo, int, boolean, boolean, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,int,boolean,boolean,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad(SnakeInfoSquad, int, boolean)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfoSquad,int,boolean)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad(SnakeInfoSquad, int, boolean, boolean, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfoSquad,int,boolean,boolean,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"SPLIT_AREA"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"squad"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"SquadNode(List<? extends SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch(AbstractRoyaleNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.search.royale.AbstractRoyaleNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.junit","c":"BasicSnakeTest","l":"standardBasicTest()"},{"p":"ai.nettogrof.battlesnake.junit","c":"ExpertSnakeTest","l":"standardExpertTest()"},{"p":"ai.nettogrof.battlesnake.junit","c":"FloodFillSnakeTest","l":"standardFloodFillTest()"},{"p":"ai.nettogrof.battlesnake.junit","c":"RightSnakeTest","l":"standardRightTest()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.junit","c":"BasicSnakeTest","l":"startBasic()"},{"p":"ai.nettogrof.battlesnake.junit","c":"ExpertSnakeTest","l":"startExpert()"},{"p":"ai.nettogrof.battlesnake.junit","c":"FloodFillSnakeTest","l":"startFloodFill()"},{"p":"ai.nettogrof.battlesnake.junit","c":"RightSnakeTest","l":"startRight()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"stopExpandLimit"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"stopSearching()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"tailValueArea"},{"p":"ai.nettogrof.battlesnake.junit","c":"SnakeTest","l":"testMain()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"updateScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadNode","l":"updateScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"width"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"WIN_SHOUT"},{"p":"ai.nettogrof.battlesnake.junit","c":"ExpertSnakeTest","l":"wrappedExpertTest()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleNode","l":"WrappedRoyaleNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleSearch","l":"WrappedRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"}];updateSearchResults();