memberSearchIndex = [{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"AbstractBestFirstSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"AbstractMCTS()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"AbstractNode()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"AbstractNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"AbstractRoyaleNode()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"AbstractRoyaleNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"AbstractRoyaleNode(List<SnakeInfo>, FoodInfo, HazardInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.HazardInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"AbstractRoyaleSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"AbstractRoyaleSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"AbstractRoyaleSearch(AbstractRoyaleNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.search.royale.AbstractRoyaleNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"AbstractSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"AbstractSnakeAI()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"AbstractSnakeAI(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadNode","l":"AbstractSquadNode(List<? extends SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch(AbstractNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"AbstractStandardNode()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"AbstractStandardNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"AbstractStandardSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"AbstractStandardSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"AbstractTreeSearchSnakeAI()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"AbstractTreeSearchSnakeAI(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"addBasicLengthScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"addBasicLengthScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"addChild(AbstractNode)","u":"addChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"addFoodValue(int[][], JsonNode, JsonNode)","u":"addFoodValue(int[][],com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"addHazardsValue(int[][], JsonNode)","u":"addHazardsValue(int[][],com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"addMove(int, List<SnakeInfo>, SnakeInfo, AbstractNode, List<SnakeInfo>)","u":"addMove(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"addScoreDistance(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"addScoreDistance(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"addSizeCompareScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"addSizeCompareScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"addToHash(Int2IntOpenHashMap, int, int)","u":"addToHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"addToHash(Int2IntOpenHashMap, int, int)","u":"addToHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"adjustBorderScore(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"adjustBorderScore(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"adjustHazardScore(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"adjustScodeBasedonBoardControl(int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"adjustScodeBasedonBoardControl(int[][])"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"alive"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"allChildsCount"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"AlphaNode()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"AlphaNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"AlphaNode(SnakeInfo, FoodInfo)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"AlphaNode(SnakeInfo[], FoodInfo)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo[],ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"AlphaSearch(AlphaNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AlphaNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"AlphaSearch(AlphaNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AlphaNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"AlphaSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"AlphaSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"apiversion"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilter","l":"apply()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"applyNewHash(Int2IntOpenHashMap, int[][])","u":"applyNewHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"applyNewHash(Int2IntOpenHashMap, int[][])","u":"applyNewHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"BASIC_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"BasicSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"BasicSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"BattleSnakeConstant()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"battleTriple"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"bestChildForAll()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"bestMove(int, int, Map<String, Integer>, int[][])","u":"bestMove(int,int,java.util.Map,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"BetaSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"BetaSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"BOARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"BOARD_ARRAY"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"BODY"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"BORDER_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"bots"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"Challenger()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"Challenger(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"checkHeadToHead(List<ArrayList<SnakeInfo>>)","u":"checkHeadToHead(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"checkPossibleMove(JsonNode, int[][])","u":"checkPossibleMove(com.fasterxml.jackson.databind.JsonNode,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"child"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"child"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"chooseBestMove(AbstractNode)","u":"chooseBestMove(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"chooseBestMove(AlphaNode)","u":"chooseBestMove(ai.nettogrof.battlesnake.treesearch.node.AlphaNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"chooseBestMove(Map<String, Integer>)","u":"chooseBestMove(java.util.Map)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"clean(List<ArrayList<SnakeInfo>>)","u":"clean(java.util.List)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"clone()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"cloneSnake()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"computePayoffMatrix(List<float[]>)","u":"computePayoffMatrix(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"computeSpace(int, int, int, int[][])","u":"computeSpace(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"cont"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilter","l":"CorsFilter()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilter","l":"corsHeaders"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"count5000()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"countEmptySquare()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"countSnakeAlive()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"cpu_limit"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"createNode(List<SnakeInfo>, AbstractNode)","u":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","u":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","u":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","u":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","u":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","u":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","u":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"defaultv"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"defaultv"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"die()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"DOULENGTH"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"DOWN"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"DuelNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"DUO_BOARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"DUO_BOARD2"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"duoChallenge(JsonNode)","u":"duoChallenge(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"eat"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"EMPTY"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"EMPTY"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"end(JsonNode)","u":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"equals(SnakeInfo)","u":"equals(ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"exp"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"expand(List<AbstractNode>, List<AbstractNode>)","u":"expand(java.util.List,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"fileConfig"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"fileConfig"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"fileConfig"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"fileConfig"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"fillList(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList, AbstractNode)","u":"fillList(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"fillList(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList, AbstractNode)","u":"fillList(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"fillMCTSList(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList, AbstractNode)","u":"fillMCTSList(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"findBestIndex(List<float[]>)","u":"findBestIndex(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"finishHim(AbstractNode, AbstractNode)","u":"finishHim(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"finishHim(AlphaNode, AlphaNode)","u":"finishHim(ai.nettogrof.battlesnake.treesearch.node.AlphaNode,ai.nettogrof.battlesnake.treesearch.node.AlphaNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"flag"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FLODDENEMYGAP"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FLODDENEMYSMALLER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"flood(int, int, int, int[][])","u":"flood(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"floodEmptySpace(int, int, int, int[][])","u":"floodEmptySpace(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"floodEnemy(int, int, int, int[][])","u":"floodEnemy(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FLOODENEMYBIGGER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"FLOODENEMYGAP"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FloodFillSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FloodFillSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"floodNegative(int, int, int, int[][])","u":"floodNegative(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"floodPositive(int, int, int, int[][])","u":"floodPositive(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"food"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"FoodInfo(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FOODVALUE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"FOURALIVE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"fourCornerChallenge(JsonNode)","u":"fourCornerChallenge(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"FourNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"freeSpace(int, List<SnakeInfo>)","u":"freeSpace(int,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","u":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","u":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","u":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","u":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","u":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"freeSpace(int, List<SnakeInfoSquad>, SnakeInfoSquad)","u":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfoSquad)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"gameId"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"GammaSnake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"GammaSnake(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateChild()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"generateChild()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateChild(AbstractNode)","u":"generateChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"generateChild(AlphaNode)","u":"generateChild(ai.nettogrof.battlesnake.treesearch.node.AlphaNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"generateHash(Int2IntOpenHashMap, Int2IntOpenHashMap, int[][])","u":"generateHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"generateHash(Int2IntOpenHashMap, Int2IntOpenHashMap, int[][])","u":"generateHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"generateResponse(AbstractNode, AbstractNode, JsonNode)","u":"generateResponse(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateSnakeInfoDestination(SnakeInfo, AbstractNode, List<SnakeInfo>)","u":"generateSnakeInfoDestination(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"genNode(List<SnakeInfo>, FoodInfo)","u":"genNode(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"genNode(List<SnakeInfo>, FoodInfo, HazardInfo)","u":"genNode(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.HazardInfo)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"genRoot(JsonNode)","u":"genRoot(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"genRoot(JsonNode)","u":"genRoot(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"genSnakeInfo(JsonNode, JsonNode)","u":"genSnakeInfo(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"genSnakeInfoSquad(JsonNode, JsonNode)","u":"genSnakeInfoSquad(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getBestChild(AbstractNode)","u":"getBestChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"getBestChild(boolean)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"getbestChildValue(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList)","u":"getbestChildValue(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getbestChildValue(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList)","u":"getbestChildValue(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getBestPath(AbstractNode)","u":"getBestPath(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getChild()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getChildCount()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"getChildCount()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getFood()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"getHazard()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getHead()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getHealth()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.info","c":"HazardInfo","l":"getListHazard()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"getMCTSBestPath(AbstractNode)","u":"getMCTSBestPath(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getName()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadNode","l":"getScoreRatio()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getShortestDistance(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getShortestDistance(int, int)","u":"getShortestDistance(int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"getSmallestChild(AbstractNode)","u":"getSmallestChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getSnakeBody()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getSnakes()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"getSquad()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getTail()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"getTotalScore()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"GO"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"HANDLER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"Handler()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.info","c":"HazardInfo","l":"hazard"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"hazard"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"HAZARD_VALUE"},{"p":"ai.nettogrof.battlesnake.info","c":"HazardInfo","l":"HazardInfo(JsonNode)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"HEAD"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"health"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"HEALTH"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"HEALTH_LOST_HAZARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"height"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"height"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"height"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"HEIGHT_FIELD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"heigth"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"heigth"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"initBoard()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"initBoard()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"initPayoffMatrix(List<float[]>)","u":"initPayoffMatrix(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"INVALID_SCORE"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isAlive()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isEat()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"isFood(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"isFood(int, int)","u":"isFood(int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"HazardInfo","l":"isHazard(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"HazardInfo","l":"isHazard(int, int)","u":"isHazard(int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isSnake(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"isSnake(int, String)","u":"isSnake(int,java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"JSON_MAPPER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"keepFourBattlesnakeAlive"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"keepFourSnakeAliveChallenge(JsonNode)","u":"keepFourSnakeAliveChallenge(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","u":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","u":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","u":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","u":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","u":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"kill(SnakeInfoSquad, List<SnakeInfoSquad>)","u":"kill(ai.nettogrof.battlesnake.info.SnakeInfoSquad,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"lastChance(AbstractNode)","u":"lastChance(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"lastChance(AlphaNode)","u":"lastChance(ai.nettogrof.battlesnake.treesearch.node.AlphaNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"lastRoot"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"lastRoot"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"LEFT"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"listAreaControl()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"listAreaControl()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"loadProperties(String)","u":"loadProperties(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"log"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"log"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"log"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"LOG"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"logValue(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList)","u":"logValue(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"LOSE_SHOUT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"losing"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"ManyNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"MAX_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"maxturn"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"MCTS_BIAS"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"mctsScore(AbstractNode, AbstractNode)","u":"mctsScore(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch(AbstractNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"merge(ArrayList<ArrayList<SnakeInfo>>, ArrayList<SnakeInfo>)","u":"merge(java.util.ArrayList,java.util.ArrayList)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"merge(List<ArrayList<SnakeInfo>>, List<SnakeInfo>)","u":"merge(java.util.List,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"mergeList(List<AbstractNode>, List<AbstractNode>)","u":"mergeList(java.util.List,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"minusbuffer"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"mirrorChallenge"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"move(JsonNode)","u":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"movePlayer1(JsonNode)","u":"movePlayer1(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"movePlayer2(JsonNode)","u":"movePlayer2(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"MOVESTR"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"moveTriplePlayer1(JsonNode)","u":"moveTriplePlayer1(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"moveTriplePlayer2(JsonNode)","u":"moveTriplePlayer2(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"multi(SnakeInfo, FoodInfo, ArrayList<SnakeInfo>, HazardInfo)","u":"multi(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.info.FoodInfo,java.util.ArrayList,ai.nettogrof.battlesnake.info.HazardInfo)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"multiThread"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"name"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"NAME"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"nodeTotalCount"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"pathFollow"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"pathMove(JsonNode)","u":"pathMove(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"ping()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"ping()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"port"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"position"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"possibleMove"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"process(Request, Response)","u":"process(spark.Request,spark.Response)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch(AbstractNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"removeHazardZone(int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"RIGHT"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"root"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"root"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"root()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"RoyaleDuelNode(List<SnakeInfo>, FoodInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"RoyaleDuelNode(List<SnakeInfo>, FoodInfo, HazardInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.HazardInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"RoyaleFourNode(List<SnakeInfo>, FoodInfo, HazardInfo)","u":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.HazardInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"RoyaleSearch(AbstractRoyaleNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.search.royale.AbstractRoyaleNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"RoyaleSearch(AbstractRoyaleNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.search.royale.AbstractRoyaleNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"score"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"scoreRatio"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"secondL"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"secondR"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"setFileConfig()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"setFoodInfo(JsonNode)","u":"setFoodInfo(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"setHealth(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"HazardInfo","l":"setInfo(JsonNode)","u":"setInfo(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"setSnake(JsonNode)","u":"setSnake(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"setSquad(String)","u":"setSquad(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"SNAKE_BODY"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"Snake()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"snakeBody"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(SnakeInfo, int, boolean)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,int,boolean)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(SnakeInfo, int, boolean, boolean)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,int,boolean,boolean)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad()","u":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad(SnakeInfoSquad, int, boolean)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfoSquad,int,boolean)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"SnakeInfoSquad(SnakeInfoSquad, int, boolean, boolean)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfoSquad,int,boolean,boolean)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"snakes"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"SNAKES"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"snakeType"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"soloChallenge(JsonNode)","u":"soloChallenge(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"space"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"space"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"SPLIT_AREA"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfoSquad","l":"squad"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"squad"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"SQUAD"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch(AbstractNode, int, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch(AbstractRoyaleNode, int, int, long, int)","u":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.search.royale.AbstractRoyaleNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AlphaSnake","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"start(JsonNode)","u":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"startL"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"startR"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"startTime"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"startTime"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"STOP_EXPAND_LIMIT"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"stopSearching()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"TAIL_VALUE_AREA"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"thirdL"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"thirdR"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"timeout"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"timeout"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"timeout"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"timeTotal"},{"p":"ai.nettogrof.battlesnake.snakes","c":"GammaSnake","l":"treeSearch(AbstractNode, long)","u":"treeSearch(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,long)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BetaSnake","l":"treeSearch(AbstractRoyaleNode, Long)","u":"treeSearch(ai.nettogrof.battlesnake.treesearch.search.royale.AbstractRoyaleNode,java.lang.Long)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"tripleChallenge(JsonNode)","u":"tripleChallenge(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"TURN"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateChildCount()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"updateFullListNode(List<AbstractNode>)","u":"updateFullListNode(java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"updateListNode(List<AbstractNode>)","u":"updateListNode(java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AlphaNode","l":"updateScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScoreMultiplePossibleMove()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScoreSinglePossibleMove()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"UPWARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"width"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Challenger","l":"width"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"width"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AlphaSearch","l":"width"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"width"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"WIDTH_FIELD"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstant","l":"WIN_SHOUT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"winning"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"YOU"}];updateSearchResults();