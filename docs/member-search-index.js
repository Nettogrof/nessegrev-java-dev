memberSearchIndex = [{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"AbstractBestFirstSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"AbstractDecisionNode()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"AbstractDecisionNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"AbstractEvaluationNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"AbstractHazard(JsonNode)","url":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"AbstractLimitedMoveRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveSearch","l":"AbstractLimitedMoveSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"AbstractMCTS()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"AbstractMultiThreadSnakeAI()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"AbstractMultiThreadSnakeAI(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"AbstractNode()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"AbstractNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"AbstractRoyaleNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"AbstractRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"AbstractSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"AbstractSearchSnakeAI()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"AbstractSearchSnakeAI(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSimpleSnakeAI","l":"AbstractSimpleSnakeAI()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSimpleSnakeAI","l":"AbstractSimpleSnakeAI(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"AbstractSnakeAI()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"AbstractSnakeAI(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"AbstractSquadSearch(AbstractNode, int, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardNode","l":"AbstractStandardNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"AbstractStandardSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"AbstractStandardSearch(AbstractNode, int, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"AbstractTreeSearchSnakeAI()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"AbstractTreeSearchSnakeAI(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"addBasicLengthScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"addChild(AbstractNode)","url":"addChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"addFoodValue(int[][], int[])","url":"addFoodValue(int[][],int[])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"addFoodValue(int[][], JsonNode, JsonNode)","url":"addFoodValue(int[][],com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"addHazardsValue(int[][], JsonNode)","url":"addHazardsValue(int[][],com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"addMove(int, List<SnakeInfo>, SnakeInfo, AbstractNode, List<SnakeInfo>)","url":"addMove(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"addNodeTotalCount(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"addScoreDistance(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"addScoreDistanceAll()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"addSizeCompareScore()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"addTimeTotal(long)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"addToHash(Int2IntOpenHashMap, int, int)","url":"addToHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"adjustHazardScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"adjustScodeBasedonBoardControl(int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"adjustScodeBasedonBoardControl(int[][])"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"alive"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"allChildsCount"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"allowBodyCollisions"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"API_V1"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"apiversion"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilterUtils","l":"apply()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"applyNewHash(Int2IntOpenHashMap, int[][])","url":"applyNewHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"applyRules(List<SnakeInfo>)","url":"applyRules(java.util.List)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"applySquadRules(List<SnakeInfo>)","url":"applySquadRules(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"BASIC_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"BasicSnake()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"BasicSnake(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"BattleSnakeConstants()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"bestMove(int, int, Map<String, Integer>, int[][])","url":"bestMove(int,int,java.util.Map,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"BOARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"BODY"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"borderScore"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"bots"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"checkBoardHash(int, int, int[][], int)","url":"checkBoardHash(int,int,int[][],int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"checkHeadToHead(List<ArrayList<SnakeInfo>>)","url":"checkHeadToHead(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"checkPossibleMove(JsonNode, int[][])","url":"checkPossibleMove(com.fasterxml.jackson.databind.JsonNode,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"checkWinLost(AbstractNode, AbstractNode, Map<String, String>)","url":"checkWinLost(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.Map)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"child"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"chooseBestMove(AbstractNode)","url":"chooseBestMove(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"cloneSnake()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"computePayoffMatrix(List<float[]>)","url":"computePayoffMatrix(java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorNode","l":"ConstrictorNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"ConstrictorSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"ConstrictorSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"ConstrictorSearch(AbstractNode, int, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"cont"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilterUtils","l":"CORS_HEADERS"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"CorsFilterUtils","l":"CorsFilterUtils()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"countEmptySquare()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"countSnakeAlive()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"cpuLimit"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"createNode(List<SnakeInfo>, AbstractNode)","url":"createNode(java.util.List,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"createSnakeInfo(SnakeInfo, int, AbstractNode)","url":"createSnakeInfo(ai.nettogrof.battlesnake.info.SnakeInfo,int,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"DEFAULTRV"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"die()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"DOWN"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"downNeck"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"DuelNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"eat"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"EMPTY"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"EMPTY"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"EMPTY_AREA"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"end(JsonNode)","url":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"end(JsonNode)","url":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"end(JsonNode)","url":"end(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"executeMCTS()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"exp"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"expand(List<AbstractNode>, List<AbstractNode>, GameRuleset)","url":"expand(java.util.List,java.util.List,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"ExpertSnake()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"ExpertSnake(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"fileConfig"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"fillBasicScore(float[], int, int)","url":"fillBasicScore(float[],int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"fillList(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList, AbstractNode)","url":"fillList(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"fillList(TFloatArrayList[], TFloatArrayList[], TFloatArrayList[], TFloatArrayList[], AbstractNode)","url":"fillList(gnu.trove.list.array.TFloatArrayList[],gnu.trove.list.array.TFloatArrayList[],gnu.trove.list.array.TFloatArrayList[],gnu.trove.list.array.TFloatArrayList[],ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"fillMCTSList(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList, AbstractNode)","url":"fillMCTSList(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"findBestIndex(List<float[]>)","url":"findBestIndex(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"findChildNewRoot(List<SnakeInfo>, FoodInfo, HazardSquare)","url":"findChildNewRoot(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.HazardSquare)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"finishHim(AbstractNode, AbstractNode)","url":"finishHim(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"finishHim(AbstractNode, AbstractNode)","url":"finishHim(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FLODDENEMYGAP"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FLODDENEMYSMALLER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"floodEmptySpace(int, int, int, int[][])","url":"floodEmptySpace(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FLOODENEMYBIGGER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FloodFillSnake()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FloodFillSnake(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"floodNegative(int, int, int, int[][])","url":"floodNegative(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"floodPositive(int, int, int, int[][])","url":"floodPositive(int,int,int,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"food"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"FoodInfo(JsonNode)","url":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"foodSpawnChance"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"FOODVALUE"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"foodValueArea"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"FOUR"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"FOUR_SNAKE"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"FourNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"freeSpace(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpace(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"freeSpaceSquad(int, List<SnakeInfo>, SnakeInfo)","url":"freeSpaceSquad(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"gameId"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"GameRuleset(JsonNode)","url":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"gameType"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateChild()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateChild(AbstractNode)","url":"generateChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"generateHash(Int2IntOpenHashMap, Int2IntOpenHashMap, int[][])","url":"generateHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"generateHash(Int2IntOpenHashMap, Int2IntOpenHashMap, int[][])","url":"generateHash(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap,int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"generateResponse(AbstractNode, AbstractNode, JsonNode)","url":"generateResponse(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"generateSnakeInfoDestination(SnakeInfo, AbstractNode, List<SnakeInfo>)","url":"generateSnakeInfoDestination(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"generateSnakeInfoDestination(SnakeInfo, AbstractNode, List<SnakeInfo>)","url":"generateSnakeInfoDestination(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleSearch","l":"generateSnakeInfoDestination(SnakeInfo, AbstractNode, List<SnakeInfo>)","url":"generateSnakeInfoDestination(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"genNode(List<SnakeInfo>, FoodInfo, HazardSquare)","url":"genNode(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.HazardSquare)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"genRoot(JsonNode)","url":"genRoot(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"genRoot(JsonNode)","url":"genRoot(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"genSearchType()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"RightSnake","l":"genSearchType()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"genSnakeInfo(JsonNode, JsonNode)","url":"genSnakeInfo(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getBestChild(AbstractNode)","url":"getBestChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getbestChildValue(TFloatArrayList, TFloatArrayList, TFloatArrayList, TFloatArrayList)","url":"getbestChildValue(gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList,gnu.trove.list.array.TFloatArrayList)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"NodeUtil","l":"getBestNode(AbstractNode)","url":"getBestNode(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getBestPath(AbstractNode)","url":"getBestPath(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSimpleSnakeAI","l":"getBestPossibleMove(Map<String, Integer>)","url":"getBestPossibleMove(java.util.Map)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"getBorderScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getChild()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getChildCount()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"RightSnake","l":"getFileConfig()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getFood()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getFoodSpawnChance()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"getFoodValueArea()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getGameType()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getHazard()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"getHazard()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getHazardDamage()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"getHazardScore()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getHead()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getHealth()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"getInfo()"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"getListHazard()"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"getListHazard()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"getLostShout()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"getMaxDepth(AbstractNode)","url":"getMaxDepth(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"getMCTSBestPath(AbstractNode)","url":"getMCTSBestPath(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"getMctsBias()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getMinimumFood()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getName()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"getPartnerIndex(SnakeInfo)","url":"getPartnerIndex(ai.nettogrof.battlesnake.info.SnakeInfo)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getPosition()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getRuleset()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"getScoreRatio()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getShortestDistance(int, int)","url":"getShortestDistance(int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"getShortestDistance(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"getSkrinkSpeed()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"getSmallestChild(AbstractNode)","url":"getSmallestChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"NodeUtil","l":"getSmallestNode(AbstractNode)","url":"getSmallestNode(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getSnakeBody()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"getSnakes()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getSquad()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"getStopExpandLimit()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"getTail()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"getTailValueArea()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"getWinnerChild(AbstractNode)","url":"getWinnerChild(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"getWinShout()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"HANDLER"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"Handler()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"hashCode()"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"hazard"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"hazard"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"HAZARD_VALUE"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"hazardDamage"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"hazardScore"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"HazardSquare(JsonNode)","url":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"HEAD"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"health"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"HEALTH"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"height"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"height"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"height"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"HEIGHT_FIELD"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"initBoard()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"initBoard()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"initBoard()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"initPayoffMatrix(List<float[]>)","url":"initPayoffMatrix(java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"INVALID_SCORE"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isAlive()"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"isAllowBodyCollisions()"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"isFood(int, int)","url":"isFood(int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"isFood(int)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"isHazardSquare(int)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"isHazardSquare(int)"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"isSharedElimination()"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"isSharedHealth()"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"isSharedLength()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"isSingleSnake()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isSnake(int, String)","url":"isSnake(int,java.lang.String)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"isSnake(int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"JSON_MAPPER"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"JustTurnRoyaleSearch","l":"JustTurnRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","url":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","url":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","url":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","url":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"AbstractStandardSearch","l":"kill(SnakeInfo, List<SnakeInfo>)","url":"kill(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"AbstractSquadSearch","l":"killSquad(SnakeInfo, List<SnakeInfo>)","url":"killSquad(ai.nettogrof.battlesnake.info.SnakeInfo,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"lastChance(AbstractNode)","url":"lastChance(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"lastChance(AbstractNode)","url":"lastChance(ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"lastRoot"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"LEFT"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"leftNeck"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"LeftRoyaleSearch","l":"LeftRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"listAreaControl()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"listAreaControl()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"loadEvaluationValue()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"loadEvaluationValue()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"loadProperties(String)","url":"loadProperties(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"log"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"log"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"LOG"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"LOG"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"logValue(TFloatArrayList[], TFloatArrayList[], TFloatArrayList[], TFloatArrayList[])","url":"logValue(gnu.trove.list.array.TFloatArrayList[],gnu.trove.list.array.TFloatArrayList[],gnu.trove.list.array.TFloatArrayList[],gnu.trove.list.array.TFloatArrayList[])"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"LOSE_SHOUT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"losing"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"ManyNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"MAX_HEALTH"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"MAX_SCORE"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"mctsBias"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractMCTS","l":"mctsScore(AbstractNode, AbstractNode)","url":"mctsScore(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,ai.nettogrof.battlesnake.treesearch.node.AbstractNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"MctsSearch(AbstractNode, int, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"merge(List<ArrayList<SnakeInfo>>, List<SnakeInfo>)","url":"merge(java.util.List,java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"mergeList(List<AbstractNode>, List<AbstractNode>)","url":"mergeList(java.util.List,java.util.List)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"minimumFood"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"MINIMUN_SNAKE"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"MINIMUN_SNAKE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"minusbuffer"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"move(JsonNode)","url":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"move(JsonNode)","url":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"BasicSnake","l":"move(JsonNode)","url":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"move(JsonNode)","url":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"move(JsonNode)","url":"move(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"moveSnake(SnakeInfo, AbstractNode, List<SnakeInfo>, List<SnakeInfo>)","url":"moveSnake(ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"MOVESTR"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"multiThread"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"multiThreadtreeSearch(AbstractNode, Long, GameRuleset)","url":"multiThreadtreeSearch(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.lang.Long,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"name"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"NAME"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"NODECOUNT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"nodeTotalCount"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"NodeUtil","l":"NodeUtil()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"ONE"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"ONE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"ping()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"ping()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"port"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"position"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"possibleMove"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"process(Request, Response)","url":"process(spark.Request,spark.Response)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch(AbstractNode, int, int, long, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"RegularSearch(AbstractNode, int, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"AbstractRoyaleNode","l":"removeHazardZone(int[][])"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"RIGHT"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"rightNeck"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"RightRoyaleSearch","l":"RightRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"RightSnake","l":"RightSnake(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"root"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"root()"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"ROYALE"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"RoyaleDuelNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"RoyaleFourNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"RoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"rules"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"rules"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"MctsSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"RegularSearch","l":"run()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"score"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"scoreRatio"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"searchType"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"selfDestination(int, List<SnakeInfo>, SnakeInfo, AbstractNode, List<SnakeInfo>)","url":"selfDestination(int,java.util.List,ai.nettogrof.battlesnake.info.SnakeInfo,ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.util.List)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setBorderScore(float)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"setCpuLimit(int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"setFileConfig(String)","url":"setFileConfig(java.lang.String)"},{"p":"ai.nettogrof.battlesnake.info","c":"FoodInfo","l":"setFoodInfo(JsonNode)","url":"setFoodInfo(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setFoodValue(int)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setHazardScore(float)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"AbstractHazard","l":"setInfo(JsonNode)","url":"setInfo(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info.hazard","c":"HazardSquare","l":"setInfo(JsonNode)","url":"setInfo(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setMCTS(float)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"setMultiThread(boolean)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"setPossibleMove(int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"setProperties()"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"setProperties()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.constrictor","c":"ConstrictorNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleDuelNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale","c":"RoyaleFourNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"DuelNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"FourNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.standard","c":"ManyNode","l":"setScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"setSquadScore()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setStopExpandLimit(float)"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"setTailValueArea(int)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"setTimeout(int)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractEvaluationNode","l":"setWinnerMaxScore()"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"sharedElimination"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"sharedHealth"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"sharedLength"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"SHOUT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"SINGLE_SNAKE"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"SINGLE_SNAKE"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"singleThreadTreeSearch(AbstractNode, Long, GameRuleset)","url":"singleThreadTreeSearch(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.lang.Long,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"skrinkSpeed"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"SNAKE_BODY"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"Snake()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"snakeBody"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"SnakeGeneticConstants()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(JsonNode)","url":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(SnakeInfo, int, boolean, boolean, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,int,boolean,boolean,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"SnakeInfo(SnakeInfo, int, boolean)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.info.SnakeInfo,int,boolean)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"snakes"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"SNAKES"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake","l":"snakeType"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"space"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"SPLIT_AREA"},{"p":"ai.nettogrof.battlesnake.info","c":"SnakeInfo","l":"squad"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"SQUAD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"SQUAD"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"SquadNode(List<SnakeInfo>, FoodInfo)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"squadRules"},{"p":"ai.nettogrof.battlesnake.info","c":"SquadRuleset","l":"SquadRuleset(JsonNode)","url":"%3Cinit%3E(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch()","url":"%3Cinit%3E()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadSearch","l":"SquadSearch(AbstractNode, int, int)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int)"},{"p":"ai.nettogrof.battlesnake.info","c":"GameRuleset","l":"STANDARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"start(JsonNode)","url":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"ExpertSnake","l":"start(JsonNode)","url":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"FloodFillSnake","l":"start(JsonNode)","url":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"Snake.Handler","l":"start(JsonNode)","url":"start(com.fasterxml.jackson.databind.JsonNode)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"startThread(AbstractSearch)","url":"startThread(ai.nettogrof.battlesnake.treesearch.AbstractSearch)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"startTime"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"stopExpandLimit"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"stopSearching()"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"SnakeGeneticConstants","l":"tailValueArea"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"timeout"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"timeout"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"timeTotal"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractMultiThreadSnakeAI","l":"treeSearch(AbstractNode, Long, GameRuleset)","url":"treeSearch(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.lang.Long,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractTreeSearchSnakeAI","l":"treeSearch(AbstractNode, Long, GameRuleset)","url":"treeSearch(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,java.lang.Long,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"TURN"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"TWO_SNAKE"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateChildCount()"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"updateFullListNode(List<AbstractNode>)","url":"updateFullListNode(java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractBestFirstSearch","l":"updateListNode(List<AbstractNode>)","url":"updateListNode(java.util.List)"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"updateScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScore()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"updateScoreMultiplePossibleMove()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"updateScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.squad","c":"SquadNode","l":"updateScoreRatio()"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractDecisionNode","l":"updateScoreSinglePossibleMove()"},{"p":"ai.nettogrof.battlesnake.treesearch.search.fun","c":"AbstractLimitedMoveRoyaleSearch","l":"upNeck"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"UPWARD"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"width"},{"p":"ai.nettogrof.battlesnake.treesearch","c":"AbstractSearch","l":"width"},{"p":"ai.nettogrof.battlesnake.treesearch.node","c":"AbstractNode","l":"width"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"WIDTH_FIELD"},{"p":"ai.nettogrof.battlesnake.snakes.common","c":"BattleSnakeConstants","l":"WIN_SHOUT"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSearchSnakeAI","l":"winning"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleNode","l":"WrappedRoyaleNode(List<SnakeInfo>, FoodInfo, AbstractHazard)","url":"%3Cinit%3E(java.util.List,ai.nettogrof.battlesnake.info.FoodInfo,ai.nettogrof.battlesnake.info.hazard.AbstractHazard)"},{"p":"ai.nettogrof.battlesnake.treesearch.search.royale.wrapped","c":"WrappedRoyaleSearch","l":"WrappedRoyaleSearch(AbstractNode, int, int, long, int, GameRuleset)","url":"%3Cinit%3E(ai.nettogrof.battlesnake.treesearch.node.AbstractNode,int,int,long,int,ai.nettogrof.battlesnake.info.GameRuleset)"},{"p":"ai.nettogrof.battlesnake.snakes","c":"AbstractSnakeAI","l":"YOU"}]